
using System;

namespace Graphviz4Net
{
    using System.Collections.Generic;
	//using System.Windows;
    using Dot;
	using Graphs;

	/// <summary>
	/// An interface for a class that builds the actual layout from information 
	/// provided by the <see cref="LayoutDirector"/>.
	/// </summary>
	/// <remarks>
	/// <para>
	/// The <see cref="LayoutDirector"/> object directs the whole process of creating 
	/// the layout, when it has a piece of information about, e.g., a vertex position 
	/// and size, it passes this piece of information to the builder, so the builder can 
	/// create an actual vertex in the WPF Canvas, Windows Form, HTML/CSS files, ...
	/// </para>
	/// <para>
	/// The director gets an <c>original <see cref="IGraph"/></c> from the user, 
	/// then it uses dot to create a layout for it -- this results into a new 
	/// instance of the original graph, we will call it <c>dot graph</c>, 
	/// that contains layout information. Most of the builder methods has an 
	/// original graph element and then the dot graph element 
	/// among their parameters.
	/// </para>
	/// <para>
	/// Values generated by dot are passed to <see cref="ILayoutBuilder{TVertexId}"/> as they are. 
	/// So the conversion must be done by the builder (each build will probably perform 
	/// different kind of conversion). Dot used 2 axes X and Y. Position [0,0] is in 
	/// the top, left corner and it increases to the right and to the bottom. 
	/// Sizes (width, height) should be multiplied by 72 to have the same measure as positions.
	/// </para>
	/// </remarks>
	public class Size
	{
		public double Width;
		public double Height;
	}

}