<!--

  DynamicJava Ant file.

Build Tools
===========
 
  The DynamicJava build system is based on Apache Ant, which is a Java building tool
  used in Apache projects.
  For more information refer to "http://jakarta.apache.org/ant/".
 
  The distribution contains a precompiled version of Ant.
 
  The only thing that you have to make sure, is the "JAVA_HOME" environment
  property should be set to match the JVM you want to use.

Building Instructions
=====================
 
First, make sure your current working directory is where this file is located.
Then type:
 
  [unix]  ./build.sh compile
  [win32] .\build.bat compile
 
This action will compile the sources to the 'classes' directory.
 
You can now launch the interpreter GUI by typing:
 
  [unix]  ./build.sh gui
  [win32] .\build.bat gui

Build Targets
=============
 
To display the available targets type:
 
  [unix]  ./build.sh  help
  [win32] .\build.bat help

  $Id: build.xml,v 1.4 2002/06/13 10:35:09 shillion Exp $

-->

<project default="help" basedir=".">
  <target name="init-args" unless="args">
    <property name="args" value=""/>
  </target>

  <target name="init" depends="init-args">
    <tstamp/>

    <property name="version"         value="1.1.5"/>
    <property name="dist"            value="DynamicJava-${version}"/>
    <property name="package-prefix"  value="koala/dynamicjava"/>

    <property name="src"             value="sources"/>
    <property name="resources"       value="resources"/>
    <property name="dest"            value="classes"/>
  </target>

  <!-- Help ==================================================== -->
  <target name="help">
    <echo message=""/>
    <echo message="DynamicJava build usage."/>
    <echo message=""/>
    <echo message="Available targets:"/>
    <echo message=" dist   : builds a distribution."/>
    <echo message=" compile: compiles the source code."/>
    <echo message=" gui    : runs the GUI."/>
    <echo message=" clean  : cleans everything.."/>
    <echo message=""/>
  </target>

  <!-- Compilation ==================================================== -->
  <target name="compile" depends="init">
    <mkdir dir="${dest}"/>
    <javac source="7" srcdir="${src}" destdir="${dest}" deprecation="on"/>
  </target>

  <target name="clean-compile" depends="init">
    <delete dir="${dest}"/>
  </target>
 
  <!-- Applications ================================================= -->
  <target name="gui" depends="compile">
    <java fork="yes" classname="koala.dynamicjava.gui.Main">
      <classpath>
        <pathelement location="${dest}"/>
        <pathelement location="resources"/>
      </classpath>
      <arg value="${args}"/>
    </java>

  </target>

  <!-- Distribution ================================================= -->
  <target name="dist" depends="prepare-dist, jars, javadoc">
    <zip zipfile="${dist}.zip" basedir="${dist}" includes="**/*"/>
  </target>

  <target name="jars" depends="compile, prepare-dist">
    <jar jarfile="${dist}/lib/dynamicjava.jar">
      <fileset dir="${dest}">
        <include name="${package-prefix}/**/*"/>
      </fileset>
      <fileset dir="${resources}">
        <include name="${package-prefix}/**/*"/>
      </fileset>
    </jar>
    <jar manifest="${src}/djava.mf"
         jarfile="${dist}/djava.jar"/>
    <jar manifest="${src}/djgui.mf"
         jarfile="${dist}/djgui.jar"/>
  </target>

  <target name="prepare-dist" depends="init">
    <mkdir dir="${dist}"/>
    <mkdir dir="${dist}/lib"/>
    <mkdir dir="${dist}/docs"/>
    <mkdir dir="${dist}/docs/javadoc"/>
    <copy todir="${dist}/docs">
      <fileset dir="docs"/>
    </copy>
    <copy file="README" todir="${dist}"/>
  </target>

  <target name="javadoc" depends="init">
    <javadoc packagenames="koala.*"
             sourcepath="${src}"
             destdir="${dist}/docs/javadoc"
             author="false"
             version="false"
             use="true"
             windowtitle="DynamicJava Javadoc"
             doctitle="DynamicJava API Specification"
             bottom="Copyright &#169; 2001 Stephane Hillion. All Rights Reserved.">
    </javadoc>
  </target>

  <!-- Global clean ================================================= -->
  <target name="clean" depends="clean-compile">
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete file="${dist}.zip"/>
  </target>

</project>
