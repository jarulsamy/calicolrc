using System;
using System.IO;
using System.Diagnostics;
using System.Threading;

public class FSharpShell {
     public Process process;
     public FSharpShell() {
         ProcessStartInfo startInfo = new ProcessStartInfo();
         startInfo.FileName = "mono";
         startInfo.Arguments = "fsi.exe --readline-";
         startInfo.UseShellExecute = false;
         startInfo.RedirectStandardError = true;
         startInfo.CreateNoWindow = true;
         startInfo.RedirectStandardOutput = true;
         startInfo.RedirectStandardInput = true;

         process = Process.Start(startInfo);
         process.EnableRaisingEvents = true;
         process.OutputDataReceived += new DataReceivedEventHandler(outputHandler);
         process.ErrorDataReceived += new DataReceivedEventHandler(errorHandler);
         process.BeginOutputReadLine();
         process.BeginErrorReadLine();
     }

     public void Execute(string command) {
         process.StandardInput.WriteLine(command);
     }

     public void Close() {
         process.StandardInput.Close();
         process.Close();
     }

     public static void Main() {
        FSharpShell shell = new FSharpShell();
        shell.Execute("let x = 34 + 56;;");
        shell.Execute("exit(0);;");
        shell.process.WaitForExit();
        shell.Close();
     }

     private static void outputHandler(object sendingProcess,
                 DataReceivedEventArgs outLine) {
         if (!String.IsNullOrEmpty(outLine.Data)) {
             System.Console.WriteLine(outLine.Data);
         }
     }
     private static void errorHandler(object sendingProcess,
                 DataReceivedEventArgs outLine) {
         if (!String.IsNullOrEmpty(outLine.Data)) {
             System.Console.Error.WriteLine(outLine.Data);
         }
     }
}
